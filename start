#!/usr/bin/env sh
if [ -z "$(docker network ls --filter name=^fcp-fd$ --format={{.Name}})" ]; then
  echo "Creating fcp-fd Docker network"
  docker network create fcp-fd
fi

set -e
projectRoot="$(a="/$0"; a=${a%/*}; a=${a:-.}; a=${a#/}/; cd "$a/.." || return; pwd)"
sfd="true"
receivers="true"

show_help() {
  echo "
    Usage: path/to/fcp-fd-core [OPTION...]
    Run services.

    Options:
      -h, --help               display this help text
      -d, --data-only          run fcp-fd-data and receivers only no other SFD services
      -r, --receivers-disabled run fcp-sfd with fcp-fd-data but without receiver services

    "
}

while :; do
  case $1 in    
    -d|--data-only)
      sfd="false"
      data="true"
      receivers="true"
      ;;
    -r|--receivers-disabled)
      receivers="false"
      ;;  
    -h|--help)   # Call a "show_help" function to display a synopsis, then exit.
      show_help
      exit
      ;;
    *)
      break
  esac

  shift
done

cd "${projectRoot}"

if [ "${sfd}" = "true" ]; then
  ./fcp-fd-data/scripts/start -d;
  echo "Waiting for cosmosDB to start"
  ./fcp-fd-auth/scripts/start -d;
  ./fcp-fd-landing-page/scripts/start -d;
  ./fcp-fd-messages/scripts/start -d;
  ./fcp-fd-messages-processor/scripts/start -d;
  # ./fcp-fd-proxy/scripts/start -d; # Must be after all web applications
fi

if [ "${receivers}" = "true" ]; then
  ./fcp-fd-customer-receiver-messages/scripts/start -d;
fi

if [ "${data}" = "true" ]; then
  ./fcp-fd-data/scripts/start -d;
  echo "Waiting for cosmosDB to start"
  ./fcp-fd-customer-receiver-messages/scripts/start -d;
fi